<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title><%= title %></title>

    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat&display=swap" rel="stylesheet">
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: 'Montserrat', sans-serif;
            box-sizing: border-box;
            background: linear-gradient(to bottom, #c81d25, #000); /* Красный сверху, черный снизу */
            color: #000; /* Черный текст */
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        nav {
            width: 100%;
            background: linear-gradient(to bottom, #c81d25, #000); /* Красный сверху, черный снизу */
            padding: 1rem 0;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1000;
        }

        input[type="file"] {
            display: none; /* Скрывает стандартный файловый input */
        }

        .custom-file-label {
            display: inline-block;
            background: #000; /* Черный фон */
            color: #fff; /* Белый текст */
            padding: 0.8rem 2rem;
            font-size: 1rem;
            font-weight: bold;
            cursor: pointer;
            transition: background 0.3s ease, transform 0.2s;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .custom-file-label:hover {
            background: #c81d25; /* Красный при наведении */
            transform: scale(1.03);
        }

        img {
            max-width: 100%; /* Ширина изображения адаптируется под ширину контейнера */
            height: auto; /* Высота изменяется пропорционально ширине */
            display: block; /* Убирает лишние отступы (если изображение обернуто) */
            margin: 0 auto; /* Центрирует изображение внутри родителя */
        }

        nav ul {
            display: flex;
            justify-content: center;
            list-style: none;
            padding: 0;
            margin: 0;
        }

        nav ul li {
            margin: 0 10px;
        }

        nav ul li a {
            text-decoration: none;
            color: #fff; /* Белый текст */
            font-weight: bold;
            font-size: 1.1rem;
            padding: 0.5rem 1rem;
            transition: background-color 0.3s, transform 0.2s;
        }

        nav ul li a:hover {
            background: #c81d25; /* Темно-серый для эффекта */
            transform: scale(1.1);
        }

        .page-container {
            width: 100%;
            max-width: 600px;
            background: #fff; /* Белый фон */
            color: #000; /* Черный текст */
            box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.15); /* Тень */
            padding: 2rem;
            text-align: center;
            margin-top: 80px;
            animation: fadeIn 0.5s ease-in-out;
        }

        h1 {
            font-size: 2rem;
            margin-bottom: 1rem;
            color: #c81d25; /* Красный цвет текста заголовка */
            text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);
        }

        form {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        label {
            font-size: 1.1rem;
            color: #000; /* Черный цвет текста */
            text-align: left;
        }

        input[type="text"],
        textarea {
            width: 96%;
            padding: 0.7rem;
            border: 1px solid #ddd; /* Серый обвод для полей */
            margin-top: 0.2rem;
            font-size: 1rem;
            outline: none;
            color: #333;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        textarea {
            resize: none;
        }

        input[type="text"]:focus,
        textarea:focus {
            border: 1px solid #c81d25; /* Красный цвет бордюра */
            box-shadow: 0 0 6px rgba(200, 29, 37, 0.5); /* Красное свечение */
        }

        button {
            padding: 0.7rem 1.4rem;
            border: none;
            background: #000; /* Черный фон кнопки */
            color: #fff; /* Белый текст */
            font-size: 1rem;
            font-weight: bold;
            cursor: pointer;
            transition: background 0.3s ease-in-out, transform 0.2s;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
        }

        button:hover {
            background: #c81d25; /* Красный фон при наведении */
            transform: scale(1.05); /* Увеличение при наведении */
        }

        button:active {
            transform: scale(1); /* Возврат размера */
        }

        .preview-container {
            text-align: center;
        }

        #image-preview {
            max-width: 100%;
            height: auto;
            border: 2px solid #c81d25; /* Красная рамка */
            margin-top: 1rem;
            display: none; /* По умолчанию скрыт */
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>

<body>
<nav>
    <ul>
        <li><a href="/">Home</a></li>
        <li><a href="/products">Menu</a></li>
        <li><a href="/add-product">New Product</a></li>
        <li><a href="/contacts">Contacts</a></li>
        <li><a href="/cart">View Cart</a></li>
        <li><a href="/orders">Orders</a></li>
    </ul>
</nav>

<div class="page-container">
    <h1>Edit Product</h1>
    <form action="/edit/<%= product._id %>?_method=PUT" method="POST" enctype="multipart/form-data">
        <label for="title">Title:</label>
        <input type="text" id="title" name="title" value="<%= product.title %>" required>

        <label for="text">Content:</label>
        <textarea id="text" name="text" required><%= product.text %></textarea>

        <div class="styled-content">
            <label for="cost">Cost:</label>
            <input type="number" step="0.01" name="cost" id="cost" value="<%= product.cost %>" required>
        </div>
        <div class="preview-container">
            <% if (product.image && product.image.data) { %>
                <img id="current-image" src="data:<%= product.image.contentType %>;base64,<%= product.image.data.toString('base64') %>" alt="Product Image">
            <% } %>

            <img id="image-preview" src="#" alt="Selected Image" style="display: none;">
        </div>

        <div class="file-upload">
            <label for="image" class="custom-file-label">Change Image</label>
            <input type="file" id="image" name="image" accept="image/*">
        </div>
        <button type="submit">Save Changes</button>
    </form>
</div>

<script>
    function autoResizeField(field) {
        field.style.height = 'auto';
        field.style.height = field.scrollHeight + 'px';
    }

    document.addEventListener('DOMContentLoaded', () => {
        const elements = document.querySelectorAll('textarea, input[type="text"]');

        elements.forEach((field) => {
            autoResizeField(field);
            field.addEventListener('input', () => autoResizeField(field));
        });
    });

    document.addEventListener('DOMContentLoaded', () => {
        const resizableFields = document.querySelectorAll('textarea');
        resizableFields.forEach((field) => {
            autoResizeField(field);
            field.addEventListener('input', () => autoResizeField(field));
        });
    });
    document.getElementById('image').addEventListener('change', function (event) {
        const preview = document.getElementById('image-preview');
        const file = event.target.files[0];
        const reader = new FileReader();

        reader.onload = function (e) {
            preview.src = e.target.result;
            preview.style.display = 'block';
        };

        if (file) {
            reader.readAsDataURL(file);
        } else {
            preview.src = "#";
            preview.style.display = 'none';
        }
    });
    document.getElementById('image').addEventListener('change', function (event) {
        const preview = document.getElementById('image-preview');
        const currentImage = document.getElementById('current-image');
        const file = event.target.files[0];
        const reader = new FileReader();

        reader.onload = function (e) {
            preview.src = e.target.result;
            preview.style.display = 'block';

            if (currentImage) {
                currentImage.style.display = 'none';
            }
        };

        if (file) {
            reader.readAsDataURL(file);
        }
    });
</script>

</body>
</html>